pipeline {
    agent {
        docker { 
            image 'maven:3.8.7-openjdk-17'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    environment {
        DOCKER_IMAGE = "mi-aplicacion:latest"
        DOCKER_REGISTRY = "mi-registro-docker"
    }
    stages {
        stage('Checkout Código') {
            steps {
                git branch: 'master', url: 'https://github.com/andresguezz/JenkinPipeline'
            }
        }
        stage('Compilación y Pruebas') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('Construcción de Imagen Docker') {
            steps {
                script {
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }
        stage('Notificaciones Automáticas') {
            steps {
                mail to: 'team@example.com',
                     subject: 'Pipeline completado con éxito',
                     body: "El pipeline para la rama ${env.BRANCH_NAME} se completó correctamente."
            }
        }
        stage('Despliegue en Pruebas') {
            steps {
                script {
                    sh '''
                    docker run -d \
                        --name app_pruebas \
                        --network jenkins-network \
                        -p 8081:8080 $DOCKER_IMAGE
                    '''
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline finalizado.'
        }
    }
}